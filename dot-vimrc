set belloff=all
set number
set mouse=a
set nocompatible
set autoindent
set expandtab
set smarttab
set shiftwidth=2
set softtabstop=2
set incsearch
set hlsearch
set ignorecase
set smartcase
set confirm
set showcmd
set nostartofline
set ruler
set laststatus=2
set showtabline=1
set noshowmode
set statusline+=%F
set conceallevel=0
set directory=~/.vim/tmp
set ttymouse=sgr
set clipboard=unnamedplus
set shortmess=I
set mat=5

call plug#begin('~/.vim/plugged')
Plug 'neoclide/coc.nvim', {'branch': 'release'}
"Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
" coc-tsserver coc-json coc-html coc-css coc-pyright
" coc-git coc-cmake coc-highlight coc-tabnine
" coc-emoji coc-prettier coc-word coc-explorer coc-eslint

Plug 'vim-airline/vim-airline'
Plug 'chrisbra/csv.vim'
Plug 'google/vim-searchindex'
Plug 'airblade/vim-gitgutter'
" Generate code screenshots with :Silicon or :SiliconHighlight
Plug 'segeljakt/vim-silicon'
Plug 'fcpg/vim-farout'
Plug 'aklt/plantuml-syntax'
call plug#end()

set t_Co=256
set background=dark
set t_ut=
colorscheme farout

" CoC recommendations
set hidden
set cmdheight=2
set nobackup
set nowritebackup
set encoding=utf-8
set updatetime=300
set shortmess+=c
set signcolumn=yes

" :PlugInstall
" :PlugUpdate
" :PlugClean
" :PlugSnapshot

autocmd CursorHold * silent call CocActionAsync('highlight')

:nmap <space>e <Cmd>CocCommand explorer<CR>
:nmap <space>p <Cmd>CocCommand prettier.formatFile<CR>
:nmap <space>h <Cmd>call CocActionAsync('doHover')<CR>
:nmap <space>, <Plug>(coc-diagnostic-prev)
:nmap <space>. <Plug>(coc-diagnostic-next)
:nmap <space>d <Plug>(coc-definition)
:nmap <space>t <Plug>(coc-type-definition)
:nmap <space>i <Plug>(coc-implementation)
:nmap <space>r <Plug>(coc-references)

command! -nargs=0 Prettier :CocCommand prettier.formatFile
inoremap <silent><expr> <NUL> coc#refresh()
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

autocmd BufWritePre, *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.graphql,*.md,*.vue Prettier

let g:vim_json_syntax_conceal = 0
let g:airline_powerline_fonts = 1

syntax enable
filetype on
filetype plugin on
filetype indent on
filetype plugin indent on
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0
autocmd Filetype c set ts=2 sw=2 expandtab
autocmd Filetype cpp set ts=2 sw=2 expandtab
autocmd Filetype gitcommit set spell textwidth=72
autocmd Filetype json set ts=2 sw=2 expandtab
autocmd Filetype python set ts=4 sw=4 expandtab textWidth=79
autocmd BufNewFile,BufRead *.hbs set syntax=html
autocmd BufNewFile,BufRead *.scss set syntax=css

" Highlight lines that exceed 120 characters in length
" execute "set cc=".join(range(81,300), ',')
hi ColorColumn cterm=bold ctermbg=233
hi SpellBad ctermbg=052
hi SpellCap ctermbg=052
hi SignColumn ctermbg=232

" No beeping
set noerrorbells visualbell t_vb=
if has('autocmd')
  autocmd GUIEnter * set visualbell t_vb=
endif

" Automatically render puml diagrams
autocmd BufWritePost *.puml !plantuml -checkonly %:p && plantuml %:p && kitty +kitten icat "%:p:r.png"

" Italic comments
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"
highlight Comment cterm=italic
